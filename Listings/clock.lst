A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
NO OBJECT MODULE REQUESTED
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE clock.a51 SET(SMALL) DEBUG PRINT(.\Listings\clock.lst) OBJECT(.\Objects
                      \clock.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     
                       3     
                       4     
                       5     ;#include <TimeLib.h>
                       6     
*** ERROR #A318 IN 7 (clock.a51, LINE 5): can't open file 'TimeLib.h'
                       7     
                       8     int digit1 = 10; 
*** _________________________^
*** ERROR #A9 IN 8 (clock.a51, LINE 8): SYNTAX ERROR
                       9     int digit2 = 11; 
*** _________________________^
*** ERROR #A9 IN 9 (clock.a51, LINE 9): SYNTAX ERROR
                      10     int digit3 = 12; 
*** _________________________^
*** ERROR #A9 IN 10 (clock.a51, LINE 10): SYNTAX ERROR
                      11     int digit4 = 13; 
*** _________________________^
*** ERROR #A9 IN 11 (clock.a51, LINE 11): SYNTAX ERROR
                      12     
                      13     
                      14     int segA = 2;//Display pin A
*** _________________________^
*** ERROR #A9 IN 14 (clock.a51, LINE 14): SYNTAX ERROR
                      15     int segB = 3;//splay pin b
*** _________________________^
*** ERROR #A9 IN 15 (clock.a51, LINE 15): SYNTAX ERROR
                      16     int segC = 4; //Display pin c
*** _________________________^
*** ERROR #A9 IN 16 (clock.a51, LINE 16): SYNTAX ERROR
                      17     int segD = 5; //Display pin d
*** _________________________^
*** ERROR #A9 IN 17 (clock.a51, LINE 17): SYNTAX ERROR
                      18     int segE = 6; //Display pin e
*** _________________________^
*** ERROR #A9 IN 18 (clock.a51, LINE 18): SYNTAX ERROR
                      19     int segF = 7; //Display pin f
*** _________________________^
*** ERROR #A9 IN 19 (clock.a51, LINE 19): SYNTAX ERROR
                      20     int segG = 8; //Display pin g
*** _________________________^
*** ERROR #A9 IN 20 (clock.a51, LINE 20): SYNTAX ERROR
                      21     int segDP = 9;// Display pin dot
*** _________________________^
*** ERROR #A9 IN 21 (clock.a51, LINE 21): SYNTAX ERROR
                      22     
                      23     
                      24     byte SW0 = A0; //connect jumper or switch for time adjust connected with Gnd
*** _________________________^
*** ERROR #A9 IN 24 (clock.a51, LINE 24): SYNTAX ERROR
                      25     byte SW1 = A1; // Hour Switch - connected with Gnd
*** _________________________^
*** ERROR #A9 IN 25 (clock.a51, LINE 25): SYNTAX ERROR
                      26     byte SW2 = A2; // Minute Switch - connected with Gnd
*** _________________________^
*** ERROR #A9 IN 26 (clock.a51, LINE 26): SYNTAX ERROR
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     2

                      27     
                      28     
                      29     void setup() {
*** _________________________^
*** ______________________________________^
*** ERROR #A9 IN 29 (clock.a51, LINE 29): SYNTAX ERROR
*** ERROR #A3 IN 29 (clock.a51, LINE 29): ILLEGAL CHARACTER
                      30     
                      31       pinMode(segA, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 31 (clock.a51, LINE 31): SYNTAX ERROR
                      32       pinMode(segB, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 32 (clock.a51, LINE 32): SYNTAX ERROR
                      33       pinMode(segC, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 33 (clock.a51, LINE 33): SYNTAX ERROR
                      34       pinMode(segD, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 34 (clock.a51, LINE 34): SYNTAX ERROR
                      35       pinMode(segE, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 35 (clock.a51, LINE 35): SYNTAX ERROR
                      36       pinMode(segF, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 36 (clock.a51, LINE 36): SYNTAX ERROR
                      37       pinMode(segG, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 37 (clock.a51, LINE 37): SYNTAX ERROR
                      38       pinMode(segDP, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 38 (clock.a51, LINE 38): SYNTAX ERROR
                      39     
                      40       pinMode(digit1, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 40 (clock.a51, LINE 40): SYNTAX ERROR
                      41       pinMode(digit2, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 41 (clock.a51, LINE 41): SYNTAX ERROR
                      42       pinMode(digit3, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 42 (clock.a51, LINE 42): SYNTAX ERROR
                      43       pinMode(digit4, OUTPUT);
*** ___________________________^
*** ERROR #A9 IN 43 (clock.a51, LINE 43): SYNTAX ERROR
                      44     
                      45     
                      46     
                      47      Serial.begin(9600);
*** __________________________^
*** ERROR #A9 IN 47 (clock.a51, LINE 47): SYNTAX ERROR
                      48     
                      49       pinMode(SW0, INPUT);  
*** ___________________________^
*** ERROR #A9 IN 49 (clock.a51, LINE 49): SYNTAX ERROR
                      50       pinMode(SW1, INPUT);  
*** ___________________________^
*** ERROR #A9 IN 50 (clock.a51, LINE 50): SYNTAX ERROR
                      51       pinMode(SW2, INPUT);  
*** ___________________________^
*** ERROR #A9 IN 51 (clock.a51, LINE 51): SYNTAX ERROR
                      52     
                      53       digitalWrite(SW0, HIGH); 
*** ___________________________^
*** ERROR #A9 IN 53 (clock.a51, LINE 53): SYNTAX ERROR
                      54       digitalWrite(SW1, HIGH);
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     3

*** ___________________________^
*** ERROR #A9 IN 54 (clock.a51, LINE 54): SYNTAX ERROR
                      55       digitalWrite(SW2, HIGH);
*** ___________________________^
*** ERROR #A9 IN 55 (clock.a51, LINE 55): SYNTAX ERROR
                      56     }
*** _________________________^
*** ERROR #A9 IN 56 (clock.a51, LINE 56): SYNTAX ERROR
                      57     
                      58     void loop() {
*** _________________________^
*** _____________________________________^
*** ERROR #A9 IN 58 (clock.a51, LINE 58): SYNTAX ERROR
*** ERROR #A3 IN 58 (clock.a51, LINE 58): ILLEGAL CHARACTER
                      59       
                      60        digitalWrite(segDP, HIGH);
*** ____________________________^
*** ERROR #A9 IN 60 (clock.a51, LINE 60): SYNTAX ERROR
                      61        int hr = hour();
*** ____________________________^
*** ERROR #A9 IN 61 (clock.a51, LINE 61): SYNTAX ERROR
                      62        int hourFormat12(); // the hour now in 12 hour format
*** ____________________________^
*** ERROR #A9 IN 62 (clock.a51, LINE 62): SYNTAX ERROR
                      63        int hourFormat12(time_t t);
*** ____________________________^
*** ERROR #A9 IN 63 (clock.a51, LINE 63): SYNTAX ERROR
                      64       int timp = ( (hr>12)?(hr%12):hr)*100+minute();
*** ___________________________^
*** ERROR #A9 IN 64 (clock.a51, LINE 64): SYNTAX ERROR
                      65       Serial.println(timp);
*** ___________________________^
*** ERROR #A9 IN 65 (clock.a51, LINE 65): SYNTAX ERROR
                      66       
                      67     
                      68        for(int i = 250 ; i >0  ; i--) {
*** ____________________________^
*** ERROR #A9 IN 68 (clock.a51, LINE 68): SYNTAX ERROR
                      69          if (timp > 100) displayNumber01(timp);
*** _________________________________^
*** __________________________________^
*** ERROR #A21 IN 69 (clock.a51, LINE 69): EXPRESSION WITH FORWARD REFERENCE NOT PERMITTED
*** ERROR #A45 IN 69 (clock.a51, LINE 69): UNDEFINED SYMBOL (PASS-2)
                      70          else displayNumber02(timp);
*** ___________________________________^
*** ERROR #A9 IN 70 (clock.a51, LINE 70): SYNTAX ERROR
                                }
*** ____________________________^
*** ERROR #A9 IN 71 (clock.a51, LINE 71): SYNTAX ERROR
                      72     
                      73        for(int i = 250 ; i >0  ; i--) {
*** ____________________________^
*** ERROR #A9 IN 73 (clock.a51, LINE 73): SYNTAX ERROR
                      74          if (timp > 100) displayNumber03(timp);
*** _________________________________^
*** __________________________________^
*** ERROR #A21 IN 74 (clock.a51, LINE 74): EXPRESSION WITH FORWARD REFERENCE NOT PERMITTED
*** ERROR #A45 IN 74 (clock.a51, LINE 74): UNDEFINED SYMBOL (PASS-2)
                      75          else displayNumber04(timp);
*** ___________________________________^
*** ERROR #A9 IN 75 (clock.a51, LINE 75): SYNTAX ERROR
                                }
*** ____________________________^
*** ERROR #A9 IN 76 (clock.a51, LINE 76): SYNTAX ERROR
                      77     
                      78       if (!(digitalRead(SW0))) set_time();
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     4

*** _______________________________^
*** ________________________________^
*** ERROR #A9 IN 78 (clock.a51, LINE 78): SYNTAX ERROR
*** ERROR #A9 IN 78 (clock.a51, LINE 78): SYNTAX ERROR
                      79     }
*** _________________________^
*** ERROR #A9 IN 79 (clock.a51, LINE 79): SYNTAX ERROR
                      80     
                      81     
                      82     void set_time()   {
*** _________________________^
*** ___________________________________________^
*** ERROR #A9 IN 82 (clock.a51, LINE 82): SYNTAX ERROR
*** ERROR #A3 IN 82 (clock.a51, LINE 82): ILLEGAL CHARACTER
                      83       
                      84       byte minutes1 = 0;
*** ___________________________^
*** ERROR #A9 IN 84 (clock.a51, LINE 84): SYNTAX ERROR
                      85       byte hours1 = 0;
*** ___________________________^
*** ERROR #A9 IN 85 (clock.a51, LINE 85): SYNTAX ERROR
                      86       byte minutes = minute();
*** ___________________________^
*** ERROR #A9 IN 86 (clock.a51, LINE 86): SYNTAX ERROR
                      87       byte hours = hour();
*** ___________________________^
*** ERROR #A9 IN 87 (clock.a51, LINE 87): SYNTAX ERROR
                      88     
                      89       while (!digitalRead(SW0)) 
*** ___________________________^
*** __________________________________^
*** ERROR #A9 IN 89 (clock.a51, LINE 89): SYNTAX ERROR
*** ERROR #A3 IN 89 (clock.a51, LINE 89): ILLEGAL CHARACTER
                      90       {
*** ___________________________^
*** ERROR #A9 IN 90 (clock.a51, LINE 90): SYNTAX ERROR
                      91         minutes1=minutes;
*** _____________________________^
*** ERROR #A9 IN 91 (clock.a51, LINE 91): SYNTAX ERROR
                      92         hours1=hours;
*** _____________________________^
*** ERROR #A9 IN 92 (clock.a51, LINE 92): SYNTAX ERROR
                      93             
                      94       while (!digitalRead(SW1))
*** ___________________________^
*** __________________________________^
*** ERROR #A9 IN 94 (clock.a51, LINE 94): SYNTAX ERROR
*** ERROR #A3 IN 94 (clock.a51, LINE 94): ILLEGAL CHARACTER
                      95         {
*** _____________________________^
*** ERROR #A9 IN 95 (clock.a51, LINE 95): SYNTAX ERROR
                      96          hours++;
*** ______________________________^
*** ERROR #A9 IN 96 (clock.a51, LINE 96): SYNTAX ERROR
                      97     
                      98          if (hours > 12) hours = 1;
*** _________________________________^
*** __________________________________^
*** ERROR #A21 IN 98 (clock.a51, LINE 98): EXPRESSION WITH FORWARD REFERENCE NOT PERMITTED
*** ERROR #A45 IN 98 (clock.a51, LINE 98): UNDEFINED SYMBOL (PASS-2)
                      99     
                                  for(int i = 20 ; i >0  ; i--) {
                                  int timp= hours*100+minutes;
                                  if (timp > 1000) displayNumber01(timp);
                                  else displayNumber02(timp);
                                  }
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     5

                             
                                 delay(150);
                                 }
                                 while (!digitalRead(SW2)) 
                                 {
                                  minutes++;
                             
                                 if (minutes > 59) minutes = 0;
                                  for(int i = 20 ; i >0  ; i--) {
                                    int timp= hours*100+minutes;
                                  if (timp > 1000) displayNumber01(timp);
                                  else displayNumber02(timp);
                                  }
                                  delay(150);
                                 }
                                  for(int i = 20 ; i >0  ; i--) {
                                  displayNumber01(hours*100+minutes);
                                  }
                                  setTime(hours,minutes,0,0,0,0);
                              
                             
                               }
                             
                             }
                             
                             void displayNumber01(int toDisplay) {
                             
                             
                             
                             
                             
                               for(int digit = 4 ; digit > 0 ; digit--) {
                             
                               
                                 switch(digit) {
                                 case 1:
                                  digitalWrite(digit1, HIGH);
                                  digitalWrite(segDP, LOW);
                                   break;
                                case 2:
                                   digitalWrite(digit2, HIGH);
                                   digitalWrite(segDP, LOW);
                                   break;
                                 case 3:
                                   digitalWrite(digit3, HIGH);
                                   digitalWrite(segDP, LOW);
                                   break;
                                 case 4:
                                   digitalWrite(digit4, HIGH);
                                   digitalWrite(segDP, LOW);
                                   break;
                                 }
                                 lightNumber(toDisplay % 10);
                                 toDisplay /= 10;
                                 delayMicroseconds(500);
                             
                               
                                 lightNumber(10);
                             
                                 
                                 digitalWrite(digit1, LOW);
                                 digitalWrite(digit2, LOW);
                                 digitalWrite(digit3, LOW);
                                 digitalWrite(digit4, LOW);
                             }
                             }
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     6

                             
                             void displayNumber02(int toDisplay) {
                             
                             
                             
                             
                             
                               for(int digit = 4 ; digit > 0 ; digit--) {
                             
                                
                                 switch(digit) {
                                 case 1:
                                  lightNumber(10);
                                  digitalWrite(segDP, LOW);
                                  break;
                                case 2:
                                   digitalWrite(digit2, HIGH);
                                   digitalWrite(segDP, LOW);
                                   break;
                                 case 3:
                                   digitalWrite(digit3, HIGH);
                                   digitalWrite(segDP, LOW);
                                   break;
                                 case 4:
                                   digitalWrite(digit4, HIGH);
                                   digitalWrite(segDP, LOW);
                                   break;
                                 }
                                 lightNumber(toDisplay % 10);
                                 toDisplay /= 10;
                                 delayMicroseconds(500);
                             
                                 
                                 lightNumber(10);
                             
                                 
                                 digitalWrite(digit1, LOW);
                                 digitalWrite(digit2, LOW);
                                 digitalWrite(digit3, LOW);
                                 digitalWrite(digit4, LOW);
                             }
                             }
                             
                             void displayNumber03(int toDisplay) {
                             
                             
                             
                             
                             
                               for(int digit = 4 ; digit > 0 ; digit--) {
                             
                                 
                                 switch(digit) {
                                 case 1:
                                  digitalWrite(digit1, HIGH);
                                  digitalWrite(segDP, HIGH);
                                   break;
                                case 2:
                                   digitalWrite(digit2, HIGH);
                                   digitalWrite(segDP, HIGH);
                                   break;
                                 case 3:
                                   digitalWrite(digit3, HIGH);
                                   digitalWrite(segDP, HIGH);
                                   break;
                                 case 4:
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     7

                                   digitalWrite(digit4, HIGH);
                                   digitalWrite(segDP, HIGH);
                                   break;
                                 }
                                 lightNumber(toDisplay % 10);
                                 toDisplay /= 10;
                                 delayMicroseconds(500);
                             
                                 
                                 lightNumber(10);
                             
                                
                                 digitalWrite(digit1, LOW);
                                 digitalWrite(digit2, LOW);
                                 digitalWrite(digit3, LOW);
                                 digitalWrite(digit4, LOW);
                             }
                             }
                             
                             void displayNumber04(int toDisplay) {
                             
                             
                             
                             
                             
                               for(int digit = 4 ; digit > 0 ; digit--) {
                             
                                 
                                 switch(digit) {
                                 case 1:
                                  lightNumber(10);
                                  digitalWrite(segDP, HIGH);
                                  break;
                                case 2:
                                   digitalWrite(digit2, HIGH);
                                   digitalWrite(segDP, HIGH);
                                   break;
                                 case 3:
                                   digitalWrite(digit3, HIGH);
                                   digitalWrite(segDP, HIGH);
                                   break;
                                 case 4:
                                   digitalWrite(digit4, HIGH);
                                   digitalWrite(segDP, HIGH);
                                   break;
                                 }
                                 lightNumber(toDisplay % 10);
                                 toDisplay /= 10;
                                 delayMicroseconds(500);
                             
                                  
                                 lightNumber(10);
                             
                                 
                                 digitalWrite(digit1, LOW);
                                 digitalWrite(digit2, LOW);
                                 digitalWrite(digit3, LOW);
                                 digitalWrite(digit4, LOW);
                             }
                             }
                             
                             void lightNumber(int numberToDisplay) {
                             
                             
                             
                             
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     8

                               switch (numberToDisplay){
                             
                               case 0:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, LOW);
                                 digitalWrite(segE, LOW);
                                 digitalWrite(segF, LOW);
                                 digitalWrite(segG, HIGH);
                                 break;
                             
                               case 1:
                                 digitalWrite(segA, HIGH);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, HIGH);
                                 digitalWrite(segE, HIGH);
                                 digitalWrite(segF, HIGH);
                                 digitalWrite(segG, HIGH);
                                 break;
                             
                               case 2:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, HIGH);
                                 digitalWrite(segD, LOW);
                                 digitalWrite(segE, LOW);
                                 digitalWrite(segF, HIGH);
                                 digitalWrite(segG, LOW);
                                 break;
                             
                               case 3:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, LOW);
                                 digitalWrite(segE, HIGH);
                                 digitalWrite(segF, HIGH);
                                 digitalWrite(segG, LOW);
                                 break;
                             
                               case 4:
                                 digitalWrite(segA, HIGH);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, HIGH);
                                 digitalWrite(segE, HIGH);
                                 digitalWrite(segF, LOW);
                                 digitalWrite(segG, LOW);
                                 break;
                             
                               case 5:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, HIGH);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, LOW);
                                 digitalWrite(segE, HIGH);
                                 digitalWrite(segF, LOW);
                                 digitalWrite(segG, LOW);
                                 break;
                             
                               case 6:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, HIGH);
                                 digitalWrite(segC, LOW);
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE     9

                                 digitalWrite(segD, LOW);
                                 digitalWrite(segE, LOW);
                                 digitalWrite(segF, LOW);
                                 digitalWrite(segG, LOW);
                                 break;
                             
                               case 7:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, HIGH);
                                 digitalWrite(segE, HIGH);
                                 digitalWrite(segF, HIGH);
                                 digitalWrite(segG, HIGH);
                                 break;
                             
                               case 8:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, LOW);
                                 digitalWrite(segE, LOW);
                                 digitalWrite(segF, LOW);
                                 digitalWrite(segG, LOW);
                                 break;
                             
                               case 9:
                                 digitalWrite(segA, LOW);
                                 digitalWrite(segB, LOW);
                                 digitalWrite(segC, LOW);
                                 digitalWrite(segD, LOW);
                                 digitalWrite(segE, HIGH);
                                 digitalWrite(segF, LOW);
                                 digitalWrite(segG, LOW);
                                 break;
                             
                               
                               case 10:
                                 digitalWrite(segA, HIGH);
                                 digitalWrite(segB, HIGH);
                                 digitalWrite(segC, HIGH);
                                 digitalWrite(segD, HIGH);
                                 digitalWrite(segE, HIGH);
                                 digitalWrite(segF, HIGH);
                                 digitalWrite(segG, HIGH);
                                 break;
                             
                               }
                             }
                             END
*** ERROR #A56 IN 418 (clock.a51, LINE 417): UNBALANCED IF-ENDIF CONTROLS
*** WARNING #A41 IN 418 (clock.a51, LINE 417): MISSING 'END' STATEMENT
A51 MACRO ASSEMBLER  CLOCK                                                                03/24/2023 08:55:40 PAGE    10

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?. . . . . . . . .    ----   -----       
A0 . . . . . . . .    ----   -----       
A1 . . . . . . . .    ----   -----       
A2 . . . . . . . .    ----   -----       
BEGIN. . . . . . .    ----   -----       
BYTE . . . . . . .    ----   -----       
DIGIT1 . . . . . .    ----   -----       
DIGIT2 . . . . . .    ----   -----       
DIGIT3 . . . . . .    ----   -----       
DIGIT4 . . . . . .    ----   -----       
DIGITALREAD. . . .    ----   -----       
DIGITALWRITE . . .    ----   -----       
DISPLAYNUMBER01. .    ----   -----       
DISPLAYNUMBER02. .    ----   -----       
DISPLAYNUMBER03. .    ----   -----       
DISPLAYNUMBER04. .    ----   -----       
FOR. . . . . . . .    ----   -----       
HOUR . . . . . . .    ----   -----       
HOURFORMAT12 . . .    ----   -----       
HOURS. . . . . . .    ----   -----       
HOURS1 . . . . . .    ----   -----       
HR . . . . . . . .    ----   -----       
I. . . . . . . . .    ----   -----       
INPUT. . . . . . .    ----   -----       
INT. . . . . . . .    ----   -----       
LOOP . . . . . . .    ----   -----       
MINUTE . . . . . .    ----   -----       
MINUTES. . . . . .    ----   -----       
MINUTES1 . . . . .    ----   -----       
OUTPUT . . . . . .    ----   -----       
PINMODE. . . . . .    ----   -----       
PRINTLN. . . . . .    ----   -----       
SEGA . . . . . . .    ----   -----       
SEGB . . . . . . .    ----   -----       
SEGC . . . . . . .    ----   -----       
SEGD . . . . . . .    ----   -----       
SEGDP. . . . . . .    ----   -----       
SEGE . . . . . . .    ----   -----       
SEGF . . . . . . .    ----   -----       
SEGG . . . . . . .    ----   -----       
SERIAL . . . . . .    ----   -----       
SETUP. . . . . . .    ----   -----       
SET_TIME . . . . .    ----   -----       
SW0. . . . . . . .    ----   -----       
SW1. . . . . . . .    ----   -----       
SW2. . . . . . . .    ----   -----       
T. . . . . . . . .    ----   -----       
TIME_T . . . . . .    ----   -----       
TIMP . . . . . . .    ----   -----       
VOID . . . . . . .    ----   -----       
WHILE. . . . . . .    ----   -----       


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  1 WARNING(S), 78 ERROR(S)
